// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fh_family_experience_code_first_database;

#nullable disable

namespace fh_family_experience_code_first_database.Migrations
{
    [DbContext(typeof(AppDbContextDeploy))]
    [Migration("20220914145342_initail-setup-db")]
    partial class initailsetupdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.AccessibilityForDisabilities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accessibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("AccessibilityForDisabilities");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.CostOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("AmountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("ServiceId");

                    b.ToTable("CostOptions");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Eligibility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accreditations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Assured_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Attending_access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attending_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deliverable_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenReferralOrganisationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Eligibilities");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Funding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Fundings");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.HolidaySchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ClosesAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpensAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SatrtDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ServiceAtLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("ServiceAtLocationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("HolidaySchedule");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LanguagesOtherThanEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.LinkTaxonomy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LinkType")
                        .HasColumnType("int");

                    b.Property<Guid?>("TaxonomyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaxonomyId");

                    b.ToTable("LinkTaxonomies");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Organisation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Phone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.PhysicalAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("PhysicalAddress");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.RegularSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ByDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ByMonthDay")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosesAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DtStart")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int");

                    b.Property<int?>("Interval")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpensAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ServiceAtLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WeekDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("ServiceAtLocationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("RegularSchedules");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Score")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Widget")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accreditations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Assured_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Attending_access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attending_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deliverable_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceAreas");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceAtLocations");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceTaxonomy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaxonomyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("TaxonomyId");

                    b.ToTable("ServiceTaxonomies");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Taxonomy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vocabulary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Taxononmies");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.AccessibilityForDisabilities", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Location", null)
                        .WithMany("AccessibilityForDisabilities")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Contact", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("Contacts")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("Contacts")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.CostOption", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("CostOptions")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("CostOtions")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Eligibility", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("Eligibilities")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("Eligibilities")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Funding", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("Fundings")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("Fundings")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.HolidaySchedule", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("HolidaySchedules")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", null)
                        .WithMany("HolidayScheduleCollection")
                        .HasForeignKey("ServiceAtLocationId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("HolidaySchedules")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Language", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("Languages")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("Languages")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.LinkTaxonomy", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Taxonomy", null)
                        .WithMany("LinkTaxonomyCollection")
                        .HasForeignKey("TaxonomyId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Phone", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Contact", null)
                        .WithMany("Phones")
                        .HasForeignKey("ContactId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.PhysicalAddress", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Location", null)
                        .WithMany("PhysicalAddresses")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.RegularSchedule", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("RegularSchedules")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", null)
                        .WithMany("RegularSchedule")
                        .HasForeignKey("ServiceAtLocationId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("RegularSchedules")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Review", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("Reviews")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Organisation", null)
                        .WithMany("Reviews")
                        .HasForeignKey("OrganisationId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", "Service")
                        .WithMany("Reviews")
                        .HasForeignKey("ServiceId");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Service", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Organisation", "Organisation")
                        .WithMany("Services")
                        .HasForeignKey("OrganisationId");

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceArea", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("ServiceAreas")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("ServiceAreas")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("ServiceAtLocations")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("ServiceAtLocations")
                        .HasForeignKey("ServiceId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceTaxonomy", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("Taxonomies")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("ServiceTaxonomies")
                        .HasForeignKey("ServiceId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Taxonomy", "Taxonomy")
                        .WithMany()
                        .HasForeignKey("TaxonomyId");

                    b.Navigation("Taxonomy");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Contact", b =>
                {
                    b.Navigation("Phones");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Eligibility", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("CostOptions");

                    b.Navigation("Eligibilities");

                    b.Navigation("Fundings");

                    b.Navigation("HolidaySchedules");

                    b.Navigation("Languages");

                    b.Navigation("RegularSchedules");

                    b.Navigation("Reviews");

                    b.Navigation("ServiceAreas");

                    b.Navigation("ServiceAtLocations");

                    b.Navigation("Taxonomies");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Location", b =>
                {
                    b.Navigation("AccessibilityForDisabilities");

                    b.Navigation("PhysicalAddresses");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Organisation", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Service", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("CostOtions");

                    b.Navigation("Eligibilities");

                    b.Navigation("Fundings");

                    b.Navigation("HolidaySchedules");

                    b.Navigation("Languages");

                    b.Navigation("RegularSchedules");

                    b.Navigation("Reviews");

                    b.Navigation("ServiceAreas");

                    b.Navigation("ServiceAtLocations");

                    b.Navigation("ServiceTaxonomies");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", b =>
                {
                    b.Navigation("HolidayScheduleCollection");

                    b.Navigation("RegularSchedule");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Taxonomy", b =>
                {
                    b.Navigation("LinkTaxonomyCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
