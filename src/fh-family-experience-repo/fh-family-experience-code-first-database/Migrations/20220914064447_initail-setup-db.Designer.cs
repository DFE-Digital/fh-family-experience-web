// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fh_family_experience_code_first_database;

#nullable disable

namespace fh_family_experience_code_first_database.Migrations
{
    [DbContext(typeof(AppDbContextDeploy))]
    [Migration("20220914064447_initail-setup-db")]
    partial class initailsetupdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.AccessibilityForDisabilities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accessibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccessibilityForDisabilities");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PhoneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.CostOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AmountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CostOptions");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Eligibility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EligibilityType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaximumjAge")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumAge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Eligibilities");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Funding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fundings");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.HolidaySchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ClosesAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpensAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SatrtDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HolidaySchedule");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccessibilityForDisabilitiesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PhysicalAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceAtLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccessibilityForDisabilitiesId");

                    b.HasIndex("PhysicalAddressId");

                    b.HasIndex("ServiceAtLocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Organisation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Phone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.PhysicalAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhysicalAddress");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.RegularSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ByDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ByMonthDay")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosesAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DtStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int");

                    b.Property<int?>("Interval")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpensAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WeekDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RegularSchedules");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Score")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Widget")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accreditations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AssuredDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AttendingAccess")
                        .HasColumnType("int");

                    b.Property<int?>("AttendingType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostOptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliverableType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EligibilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FundingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HolidayScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RegularScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceAtLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceTaxonomyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("CostOptionId");

                    b.HasIndex("EligibilityId");

                    b.HasIndex("FundingId");

                    b.HasIndex("HolidayScheduleId");

                    b.HasIndex("RegularScheduleId");

                    b.HasIndex("ReviewId");

                    b.HasIndex("ServiceAreaId");

                    b.HasIndex("ServiceAtLocationId");

                    b.HasIndex("ServiceTaxonomyId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceAreas");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HolidayScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RegularScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HolidayScheduleId");

                    b.HasIndex("RegularScheduleId");

                    b.ToTable("ServiceAtLocations");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceTaxonomy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceTaxonomies");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Taxononmy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServiceTaxonomyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Vocabulary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTaxonomyId");

                    b.ToTable("Taxononmies");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Contact", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Phone", null)
                        .WithMany("ContactId")
                        .HasForeignKey("PhoneId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Location", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.AccessibilityForDisabilities", null)
                        .WithMany("LocationId")
                        .HasForeignKey("AccessibilityForDisabilitiesId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.PhysicalAddress", null)
                        .WithMany("Location")
                        .HasForeignKey("PhysicalAddressId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", null)
                        .WithMany("LocationId")
                        .HasForeignKey("ServiceAtLocationId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Organisation", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Review", null)
                        .WithMany("ReviewerOrganisationId")
                        .HasForeignKey("ReviewId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Service", null)
                        .WithMany("OrganisationId")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Service", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.Contact", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("ContactId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.CostOption", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("CostOptionId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Eligibility", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("EligibilityId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Funding", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("FundingId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.HolidaySchedule", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("HolidayScheduleId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.RegularSchedule", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("RegularScheduleId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.Review", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("ReviewId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.ServiceArea", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("ServiceAreaId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("ServiceAtLocationId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.ServiceTaxonomy", null)
                        .WithMany("ServiceId")
                        .HasForeignKey("ServiceTaxonomyId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.HolidaySchedule", null)
                        .WithMany("ServiceAtLocationId")
                        .HasForeignKey("HolidayScheduleId");

                    b.HasOne("fh_family_experience_sharedkernel.Entities.RegularSchedule", null)
                        .WithMany("ServiceAtLocationId")
                        .HasForeignKey("RegularScheduleId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Taxononmy", b =>
                {
                    b.HasOne("fh_family_experience_sharedkernel.Entities.ServiceTaxonomy", null)
                        .WithMany("TaxononmyId")
                        .HasForeignKey("ServiceTaxonomyId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.AccessibilityForDisabilities", b =>
                {
                    b.Navigation("LocationId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Contact", b =>
                {
                    b.Navigation("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.CostOption", b =>
                {
                    b.Navigation("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Eligibility", b =>
                {
                    b.Navigation("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Funding", b =>
                {
                    b.Navigation("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.HolidaySchedule", b =>
                {
                    b.Navigation("ServiceAtLocationId");

                    b.Navigation("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Phone", b =>
                {
                    b.Navigation("ContactId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.PhysicalAddress", b =>
                {
                    b.Navigation("Location");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.RegularSchedule", b =>
                {
                    b.Navigation("ServiceAtLocationId");

                    b.Navigation("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Review", b =>
                {
                    b.Navigation("ReviewerOrganisationId");

                    b.Navigation("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.Service", b =>
                {
                    b.Navigation("OrganisationId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceArea", b =>
                {
                    b.Navigation("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceAtLocation", b =>
                {
                    b.Navigation("LocationId");

                    b.Navigation("ServiceId");
                });

            modelBuilder.Entity("fh_family_experience_sharedkernel.Entities.ServiceTaxonomy", b =>
                {
                    b.Navigation("ServiceId");

                    b.Navigation("TaxononmyId");
                });
#pragma warning restore 612, 618
        }
    }
}
